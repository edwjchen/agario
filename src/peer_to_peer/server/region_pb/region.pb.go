// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: region.proto

package region_pb

import (
	common "peer_to_peer/common"
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{0}
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{1}
}

type AddRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions []*FoodRequest `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *AddRegionsRequest) Reset() {
	*x = AddRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRegionsRequest) ProtoMessage() {}

func (x *AddRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRegionsRequest.ProtoReflect.Descriptor instead.
func (*AddRegionsRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{2}
}

func (x *AddRegionsRequest) GetRegions() []*FoodRequest {
	if x != nil {
		return x.Regions
	}
	return nil
}

type RemoveRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions []*IdRegionRequest `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *RemoveRegionsRequest) Reset() {
	*x = RemoveRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRegionsRequest) ProtoMessage() {}

func (x *RemoveRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRegionsRequest.ProtoReflect.Descriptor instead.
func (*RemoveRegionsRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveRegionsRequest) GetRegions() []*IdRegionRequest {
	if x != nil {
		return x.Regions
	}
	return nil
}

type IdRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdRegionRequest) Reset() {
	*x = IdRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRegionRequest) ProtoMessage() {}

func (x *IdRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRegionRequest.ProtoReflect.Descriptor instead.
func (*IdRegionRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{4}
}

func (x *IdRegionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blobs []*common.Blob `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	Foods []*common.Food `protobuf:"bytes,2,rep,name=foods,proto3" json:"foods,omitempty"`
	Ready bool           `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *GetRegionResponse) Reset() {
	*x = GetRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionResponse) ProtoMessage() {}

func (x *GetRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionResponse.ProtoReflect.Descriptor instead.
func (*GetRegionResponse) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{5}
}

func (x *GetRegionResponse) GetBlobs() []*common.Blob {
	if x != nil {
		return x.Blobs
	}
	return nil
}

func (x *GetRegionResponse) GetFoods() []*common.Food {
	if x != nil {
		return x.Foods
	}
	return nil
}

func (x *GetRegionResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type UpdateRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blob *common.Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	Id   uint32       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateRegionRequest) Reset() {
	*x = UpdateRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegionRequest) ProtoMessage() {}

func (x *UpdateRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegionRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegionRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRegionRequest) GetBlob() *common.Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

func (x *UpdateRegionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaMass int32 `protobuf:"varint,1,opt,name=deltaMass,proto3" json:"deltaMass,omitempty"`
	Alive     bool  `protobuf:"varint,2,opt,name=alive,proto3" json:"alive,omitempty"`
	Ready     bool  `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *UpdateRegionResponse) Reset() {
	*x = UpdateRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegionResponse) ProtoMessage() {}

func (x *UpdateRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegionResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegionResponse) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRegionResponse) GetDeltaMass() int32 {
	if x != nil {
		return x.DeltaMass
	}
	return 0
}

func (x *UpdateRegionResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *UpdateRegionResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type FoodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Foods []*common.Food `protobuf:"bytes,2,rep,name=foods,proto3" json:"foods,omitempty"`
}

func (x *FoodRequest) Reset() {
	*x = FoodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodRequest) ProtoMessage() {}

func (x *FoodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodRequest.ProtoReflect.Descriptor instead.
func (*FoodRequest) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{8}
}

func (x *FoodRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FoodRequest) GetFoods() []*common.Food {
	if x != nil {
		return x.Foods
	}
	return nil
}

var File_region_proto protoreflect.FileDescriptor

var file_region_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x49, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x49,
	0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x6c, 0x6f, 0x62, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x41, 0x0a, 0x0b,
	0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x66,
	0x6f, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73, 0x32,
	0x97, 0x04, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x19, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x13,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_region_proto_rawDescOnce sync.Once
	file_region_proto_rawDescData = file_region_proto_rawDesc
)

func file_region_proto_rawDescGZIP() []byte {
	file_region_proto_rawDescOnce.Do(func() {
		file_region_proto_rawDescData = protoimpl.X.CompressGZIP(file_region_proto_rawDescData)
	})
	return file_region_proto_rawDescData
}

var file_region_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_region_proto_goTypes = []interface{}{
	(*EmptyRequest)(nil),         // 0: region.EmptyRequest
	(*EmptyResponse)(nil),        // 1: region.EmptyResponse
	(*AddRegionsRequest)(nil),    // 2: region.AddRegionsRequest
	(*RemoveRegionsRequest)(nil), // 3: region.RemoveRegionsRequest
	(*IdRegionRequest)(nil),      // 4: region.IdRegionRequest
	(*GetRegionResponse)(nil),    // 5: region.GetRegionResponse
	(*UpdateRegionRequest)(nil),  // 6: region.UpdateRegionRequest
	(*UpdateRegionResponse)(nil), // 7: region.UpdateRegionResponse
	(*FoodRequest)(nil),          // 8: region.FoodRequest
	(*common.Blob)(nil),          // 9: common.Blob
	(*common.Food)(nil),          // 10: common.Food
}
var file_region_proto_depIdxs = []int32{
	8,  // 0: region.AddRegionsRequest.regions:type_name -> region.FoodRequest
	4,  // 1: region.RemoveRegionsRequest.regions:type_name -> region.IdRegionRequest
	9,  // 2: region.GetRegionResponse.blobs:type_name -> common.Blob
	10, // 3: region.GetRegionResponse.foods:type_name -> common.Food
	9,  // 4: region.UpdateRegionRequest.blob:type_name -> common.Blob
	10, // 5: region.FoodRequest.foods:type_name -> common.Food
	0,  // 6: region.Region.Ping:input_type -> region.EmptyRequest
	2,  // 7: region.Region.AddRegions:input_type -> region.AddRegionsRequest
	2,  // 8: region.Region.TransferPrimary:input_type -> region.AddRegionsRequest
	4,  // 9: region.Region.GetRegion:input_type -> region.IdRegionRequest
	3,  // 10: region.Region.RemoveRegions:input_type -> region.RemoveRegionsRequest
	6,  // 11: region.Region.ClientUpdate:input_type -> region.UpdateRegionRequest
	8,  // 12: region.Region.AddFoods:input_type -> region.FoodRequest
	8,  // 13: region.Region.RemoveFoods:input_type -> region.FoodRequest
	1,  // 14: region.Region.Ping:output_type -> region.EmptyResponse
	1,  // 15: region.Region.AddRegions:output_type -> region.EmptyResponse
	1,  // 16: region.Region.TransferPrimary:output_type -> region.EmptyResponse
	5,  // 17: region.Region.GetRegion:output_type -> region.GetRegionResponse
	1,  // 18: region.Region.RemoveRegions:output_type -> region.EmptyResponse
	7,  // 19: region.Region.ClientUpdate:output_type -> region.UpdateRegionResponse
	1,  // 20: region.Region.AddFoods:output_type -> region.EmptyResponse
	1,  // 21: region.Region.RemoveFoods:output_type -> region.EmptyResponse
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_region_proto_init() }
func file_region_proto_init() {
	if File_region_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_region_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_region_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_region_proto_goTypes,
		DependencyIndexes: file_region_proto_depIdxs,
		MessageInfos:      file_region_proto_msgTypes,
	}.Build()
	File_region_proto = out.File
	file_region_proto_rawDesc = nil
	file_region_proto_goTypes = nil
	file_region_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RegionClient is the client API for Region service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegionClient interface {
	Ping(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	AddRegions(ctx context.Context, in *AddRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	TransferPrimary(ctx context.Context, in *AddRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetRegion(ctx context.Context, in *IdRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error)
	RemoveRegions(ctx context.Context, in *RemoveRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	ClientUpdate(ctx context.Context, in *UpdateRegionRequest, opts ...grpc.CallOption) (*UpdateRegionResponse, error)
	AddFoods(ctx context.Context, in *FoodRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	RemoveFoods(ctx context.Context, in *FoodRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type regionClient struct {
	cc grpc.ClientConnInterface
}

func NewRegionClient(cc grpc.ClientConnInterface) RegionClient {
	return &regionClient{cc}
}

func (c *regionClient) Ping(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) AddRegions(ctx context.Context, in *AddRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/AddRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) TransferPrimary(ctx context.Context, in *AddRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/TransferPrimary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) GetRegion(ctx context.Context, in *IdRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error) {
	out := new(GetRegionResponse)
	err := c.cc.Invoke(ctx, "/region.Region/GetRegion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) RemoveRegions(ctx context.Context, in *RemoveRegionsRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/RemoveRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) ClientUpdate(ctx context.Context, in *UpdateRegionRequest, opts ...grpc.CallOption) (*UpdateRegionResponse, error) {
	out := new(UpdateRegionResponse)
	err := c.cc.Invoke(ctx, "/region.Region/ClientUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) AddFoods(ctx context.Context, in *FoodRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/AddFoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regionClient) RemoveFoods(ctx context.Context, in *FoodRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/region.Region/RemoveFoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegionServer is the server API for Region service.
type RegionServer interface {
	Ping(context.Context, *EmptyRequest) (*EmptyResponse, error)
	AddRegions(context.Context, *AddRegionsRequest) (*EmptyResponse, error)
	TransferPrimary(context.Context, *AddRegionsRequest) (*EmptyResponse, error)
	GetRegion(context.Context, *IdRegionRequest) (*GetRegionResponse, error)
	RemoveRegions(context.Context, *RemoveRegionsRequest) (*EmptyResponse, error)
	ClientUpdate(context.Context, *UpdateRegionRequest) (*UpdateRegionResponse, error)
	AddFoods(context.Context, *FoodRequest) (*EmptyResponse, error)
	RemoveFoods(context.Context, *FoodRequest) (*EmptyResponse, error)
}

// UnimplementedRegionServer can be embedded to have forward compatible implementations.
type UnimplementedRegionServer struct {
}

func (*UnimplementedRegionServer) Ping(context.Context, *EmptyRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedRegionServer) AddRegions(context.Context, *AddRegionsRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRegions not implemented")
}
func (*UnimplementedRegionServer) TransferPrimary(context.Context, *AddRegionsRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferPrimary not implemented")
}
func (*UnimplementedRegionServer) GetRegion(context.Context, *IdRegionRequest) (*GetRegionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegion not implemented")
}
func (*UnimplementedRegionServer) RemoveRegions(context.Context, *RemoveRegionsRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRegions not implemented")
}
func (*UnimplementedRegionServer) ClientUpdate(context.Context, *UpdateRegionRequest) (*UpdateRegionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientUpdate not implemented")
}
func (*UnimplementedRegionServer) AddFoods(context.Context, *FoodRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFoods not implemented")
}
func (*UnimplementedRegionServer) RemoveFoods(context.Context, *FoodRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFoods not implemented")
}

func RegisterRegionServer(s *grpc.Server, srv RegionServer) {
	s.RegisterService(&_Region_serviceDesc, srv)
}

func _Region_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).Ping(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_AddRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).AddRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/AddRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).AddRegions(ctx, req.(*AddRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_TransferPrimary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).TransferPrimary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/TransferPrimary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).TransferPrimary(ctx, req.(*AddRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_GetRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).GetRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/GetRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).GetRegion(ctx, req.(*IdRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_RemoveRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRegionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).RemoveRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/RemoveRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).RemoveRegions(ctx, req.(*RemoveRegionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_ClientUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).ClientUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/ClientUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).ClientUpdate(ctx, req.(*UpdateRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_AddFoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).AddFoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/AddFoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).AddFoods(ctx, req.(*FoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Region_RemoveFoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegionServer).RemoveFoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/region.Region/RemoveFoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegionServer).RemoveFoods(ctx, req.(*FoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Region_serviceDesc = grpc.ServiceDesc{
	ServiceName: "region.Region",
	HandlerType: (*RegionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Region_Ping_Handler,
		},
		{
			MethodName: "AddRegions",
			Handler:    _Region_AddRegions_Handler,
		},
		{
			MethodName: "TransferPrimary",
			Handler:    _Region_TransferPrimary_Handler,
		},
		{
			MethodName: "GetRegion",
			Handler:    _Region_GetRegion_Handler,
		},
		{
			MethodName: "RemoveRegions",
			Handler:    _Region_RemoveRegions_Handler,
		},
		{
			MethodName: "ClientUpdate",
			Handler:    _Region_ClientUpdate_Handler,
		},
		{
			MethodName: "AddFoods",
			Handler:    _Region_AddFoods_Handler,
		},
		{
			MethodName: "RemoveFoods",
			Handler:    _Region_RemoveFoods_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "region.proto",
}
