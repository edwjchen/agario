// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blob.proto

/*
Package blob is a generated protocol buffer package.

It is generated from these files:
	blob.proto

It has these top-level messages:
	Position
	BlobRequest
	BlobResponse
*/
package blob

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Position struct {
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Position) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type BlobRequest struct {
	Position *Position `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
}

func (m *BlobRequest) Reset()                    { *m = BlobRequest{} }
func (m *BlobRequest) String() string            { return proto.CompactTextString(m) }
func (*BlobRequest) ProtoMessage()               {}
func (*BlobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BlobRequest) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

type BlobResponse struct {
	Position *Position `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Alive    bool      `protobuf:"varint,2,opt,name=alive" json:"alive,omitempty"`
	Mass     int32     `protobuf:"varint,3,opt,name=mass" json:"mass,omitempty"`
	Players  []byte    `protobuf:"bytes,4,opt,name=players,proto3" json:"players,omitempty"`
	Food     []byte    `protobuf:"bytes,5,opt,name=food,proto3" json:"food,omitempty"`
}

func (m *BlobResponse) Reset()                    { *m = BlobResponse{} }
func (m *BlobResponse) String() string            { return proto.CompactTextString(m) }
func (*BlobResponse) ProtoMessage()               {}
func (*BlobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BlobResponse) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *BlobResponse) GetAlive() bool {
	if m != nil {
		return m.Alive
	}
	return false
}

func (m *BlobResponse) GetMass() int32 {
	if m != nil {
		return m.Mass
	}
	return 0
}

func (m *BlobResponse) GetPlayers() []byte {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *BlobResponse) GetFood() []byte {
	if m != nil {
		return m.Food
	}
	return nil
}

func init() {
	proto.RegisterType((*Position)(nil), "blob.Position")
	proto.RegisterType((*BlobRequest)(nil), "blob.BlobRequest")
	proto.RegisterType((*BlobResponse)(nil), "blob.BlobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Blob service

type BlobClient interface {
	Move(ctx context.Context, in *BlobRequest, opts ...grpc.CallOption) (*BlobResponse, error)
}

type blobClient struct {
	cc *grpc.ClientConn
}

func NewBlobClient(cc *grpc.ClientConn) BlobClient {
	return &blobClient{cc}
}

func (c *blobClient) Move(ctx context.Context, in *BlobRequest, opts ...grpc.CallOption) (*BlobResponse, error) {
	out := new(BlobResponse)
	err := grpc.Invoke(ctx, "/blob.Blob/Move", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Blob service

type BlobServer interface {
	Move(context.Context, *BlobRequest) (*BlobResponse, error)
}

func RegisterBlobServer(s *grpc.Server, srv BlobServer) {
	s.RegisterService(&_Blob_serviceDesc, srv)
}

func _Blob_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlobServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blob.Blob/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlobServer).Move(ctx, req.(*BlobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blob.Blob",
	HandlerType: (*BlobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Move",
			Handler:    _Blob_Move_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blob.proto",
}

func init() { proto.RegisterFile("blob.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x31, 0x4b, 0xc6, 0x30,
	0x10, 0x86, 0x8d, 0xa6, 0x5a, 0xee, 0x2b, 0x82, 0x87, 0x43, 0x70, 0xfa, 0xc8, 0x20, 0xc5, 0xa1,
	0x42, 0x1d, 0xc4, 0xd5, 0x5d, 0x90, 0xfc, 0x83, 0x06, 0x23, 0x14, 0x62, 0x2f, 0x36, 0xb5, 0xb4,
	0x7f, 0xc3, 0x5f, 0x2c, 0xb9, 0x58, 0xe9, 0xea, 0xf6, 0xbe, 0x97, 0x3c, 0xc7, 0x93, 0x00, 0x58,
	0x4f, 0xb6, 0x09, 0x23, 0x4d, 0x84, 0x32, 0x65, 0x7d, 0x0b, 0xe5, 0x2b, 0xc5, 0x7e, 0xea, 0x69,
	0xc0, 0x0a, 0xc4, 0xa2, 0xc4, 0x51, 0xd4, 0x85, 0x11, 0x4b, 0x6a, 0xab, 0x3a, 0xcd, 0x6d, 0xd5,
	0x4f, 0x70, 0x78, 0xf6, 0x64, 0x8d, 0xfb, 0xfc, 0x72, 0x71, 0xc2, 0x3b, 0x28, 0xc3, 0x2f, 0xc6,
	0xc4, 0xa1, 0xbd, 0x6c, 0x78, 0xf7, 0xb6, 0xcc, 0xfc, 0x9d, 0xeb, 0x6f, 0x01, 0x55, 0x66, 0x63,
	0xa0, 0x21, 0xba, 0xff, 0xc0, 0x78, 0x0d, 0x45, 0xe7, 0xfb, 0xd9, 0xb1, 0x49, 0x69, 0x72, 0x41,
	0x04, 0xf9, 0xd1, 0xc5, 0xa8, 0xce, 0x58, 0x8f, 0x33, 0x2a, 0xb8, 0x08, 0xbe, 0x5b, 0xdd, 0x18,
	0x95, 0x3c, 0x8a, 0xba, 0x32, 0x5b, 0x4d, 0xb7, 0xdf, 0x89, 0xde, 0x54, 0xc1, 0x63, 0xce, 0xed,
	0x23, 0xc8, 0xe4, 0x84, 0xf7, 0x20, 0x5f, 0x68, 0x76, 0x78, 0x95, 0x0d, 0x76, 0x6f, 0xbc, 0xc1,
	0xfd, 0x28, 0xab, 0xeb, 0x13, 0x7b, 0xce, 0xbf, 0xf7, 0xf0, 0x13, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0x8f, 0xa4, 0xa3, 0x4b, 0x01, 0x00, 0x00,
}
